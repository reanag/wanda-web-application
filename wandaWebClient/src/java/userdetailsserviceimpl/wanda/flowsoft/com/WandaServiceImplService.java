package userdetailsserviceimpl.wanda.flowsoft.com;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.flowsoft.wanda.WandaService;

/**
 * This class was generated by Apache CXF 2.7.0 2013-02-25T10:49:36.923+01:00
 * Generated source version: 2.7.0
 * 
 */

@WebServiceClient(name = "WandaServiceImplService", wsdlLocation = "http://localhost:8081/WandaWebapp/wandaService?wsdl", targetNamespace = "http://com.flowsoft.wanda.WandaServiceImpl")
public class WandaServiceImplService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName(
			"http://com.flowsoft.wanda.WandaServiceImpl",
			"WandaServiceImplService");
	public final static QName WandaServicePort = new QName(
			"http://com.flowsoft.wanda.WandaServiceImpl", "wandaServicePort");
	static {
		URL url = null;
		try {
			// url = new URL("http://blurk:8080/WandaWebapp/wandaService?wsdl");
			url = new URL("http://localhost:8081/WandaWebapp/wandaService?wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger.getLogger(
					WandaServiceImplService.class.getName()).log(
					java.util.logging.Level.INFO,
					"Can not initialize the default wsdl from {0}",
					"http://blurk.hu:8080/WandaWebapp/wandaService?wsdl");
		}
		WSDL_LOCATION = url;
	}

	public WandaServiceImplService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public WandaServiceImplService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public WandaServiceImplService() {
		super(WSDL_LOCATION, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public WandaServiceImplService(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public WandaServiceImplService(URL wsdlLocation,
			WebServiceFeature... features) {
		super(wsdlLocation, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public WandaServiceImplService(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features) {
		super(wsdlLocation, serviceName);
	}

	/**
	 * 
	 * @return returns WandaService
	 */
	@WebEndpoint(name = "wandaServicePort")
	public WandaService getWandaServicePort() {
		return super.getPort(WandaServicePort, WandaService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns WandaService
	 */
	@WebEndpoint(name = "wandaServicePort")
	public WandaService getWandaServicePort(WebServiceFeature... features) {
		return super.getPort(WandaServicePort, WandaService.class, features);
	}

}
