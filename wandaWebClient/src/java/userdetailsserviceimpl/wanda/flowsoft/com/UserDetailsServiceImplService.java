package userdetailsserviceimpl.wanda.flowsoft.com;

import java.net.MalformedURLException;
import java.net.URL;

import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;

import com.flowsoft.wanda.UserDetailsService;

/**
 * This class was generated by Apache CXF 2.7.0 2012-11-15T15:27:39.894+01:00
 * Generated source version: 2.7.0
 * 
 */
@WebServiceClient(name = "UserDetailsServiceImplService", wsdlLocation = "http://localhost:8081/WandaWebapp/userDetailsService?wsdl", targetNamespace = "http://com.flowsoft.wanda.UserDetailsServiceImpl")
public class UserDetailsServiceImplService extends Service {

	public final static URL WSDL_LOCATION;

	public final static QName SERVICE = new QName(
			"http://com.flowsoft.wanda.UserDetailsServiceImpl",
			"UserDetailsServiceImplService");
	public final static QName UserDetailsServicePort = new QName(
			"http://com.flowsoft.wanda.UserDetailsServiceImpl",
			"userDetailsServicePort");
	static {
		URL url = null;
		try {
			url = new URL(
					"http://localhost:8081/WandaWebapp/userDetailsService?wsdl");
		} catch (MalformedURLException e) {
			java.util.logging.Logger
					.getLogger(UserDetailsServiceImplService.class.getName())
					.log(java.util.logging.Level.INFO,
							"Can not initialize the default wsdl from {0}",
							"http://localhost:8081/WandaWebapp/userDetailsService?wsdl");
		}
		WSDL_LOCATION = url;
	}

	public UserDetailsServiceImplService(URL wsdlLocation) {
		super(wsdlLocation, SERVICE);
	}

	public UserDetailsServiceImplService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public UserDetailsServiceImplService() {
		super(WSDL_LOCATION, SERVICE);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public UserDetailsServiceImplService(WebServiceFeature... features) {
		super(WSDL_LOCATION, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public UserDetailsServiceImplService(URL wsdlLocation,
			WebServiceFeature... features) {
		super(wsdlLocation, SERVICE, features);
	}

	// This constructor requires JAX-WS API 2.2. You will need to endorse the
	// 2.2
	// API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS
	// 2.1
	// compliant code instead.
	public UserDetailsServiceImplService(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns UserDetailsService
	 */
	@WebEndpoint(name = "userDetailsServicePort")
	public UserDetailsService getUserDetailsServicePort() {
		return super.getPort(UserDetailsServicePort, UserDetailsService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns UserDetailsService
	 */
	@WebEndpoint(name = "userDetailsServicePort")
	public UserDetailsService getUserDetailsServicePort(
			WebServiceFeature... features) {
		return super.getPort(UserDetailsServicePort, UserDetailsService.class,
				features);
	}

}
